import{_ as a,c as e,o as t,a3 as i}from"./chunks/framework.Cv3JQ2Vj.js";const P=JSON.parse('{"title":"进程","description":"","frontmatter":{"title":"进程","date":"2021-11-10T00:00:00.000Z"},"headers":[],"relativePath":"posts/jin-cheng.md","filePath":"posts/jin-cheng.md"}'),l={name:"posts/jin-cheng.md"},o=i('<h1 id="进程" tabindex="-1">进程 <a class="header-anchor" href="#进程" aria-label="Permalink to &quot;进程&quot;">​</a></h1><p>进程是程序在运行状态期间的状态的总称。什么意思呢？打个比方，钱大部分是纸做的，钱在流动(运行)的时候才有意思，你拿着人民币去不认人民币的国家，那不就是废纸么，所以为了区别纸，把能够交易的纸叫做钱，程序也是一样，运行的时候才有意义，这样为了区分，就让运行时候的状态叫做进程。既然是进程，那么进程可以有自己独有的东西，进程由三个东西组成，分别是指令+数据+PCB。指令和数据不难理解，他们组合起来就是程序，但PCB又是什么呢？</p><h2 id="pcb" tabindex="-1">PCB <a class="header-anchor" href="#pcb" aria-label="Permalink to &quot;PCB&quot;">​</a></h2><p>PCB其实就是记录程序的身份信息的，比如程序的名称、大小、状态、在内存中的地方等等，它就类似于我们的户口，我们的户口是证明我们还在&quot;人世&quot;的凭据，同理PCB在内存中就证明了这个程序在运行，否则这个程序就挂了。</p><h2 id="进程的状态" tabindex="-1">进程的状态 <a class="header-anchor" href="#进程的状态" aria-label="Permalink to &quot;进程的状态&quot;">​</a></h2><p>两状态：运行，没运行</p><p>这个没啥好解释的，简单划分。</p><p>三状态：运行、就绪、阻塞。</p><ul><li><p>运行状态</p><ul><li>程序正在被CPU运行，被服务，就类似你去银行ATM取钱，正在操作ATM的状态。</li></ul></li><li><p>就绪状态</p><ul><li>你拿了银行卡，知道密码，什么都准备好了，就等到轮到你去操作ATM了，俗话万事俱备，只欠东风。</li></ul></li><li><p>阻塞状态</p><ul><li>本来轮到你去操作ATM了，结果进入了你才发现密码忘记了，</li></ul></li></ul><p>五状态：运行、就绪、阻塞、新建、终止。</p><p>七状态：运行、就绪、阻塞、新建、终止、就绪挂起、阻塞挂起。</p><h2 id="进程切换" tabindex="-1">进程切换 <a class="header-anchor" href="#进程切换" aria-label="Permalink to &quot;进程切换&quot;">​</a></h2><p>进程之间的轮换，好比皇位一样的，不能总是一个人做，肯定要轮着来做的，在这个过程中需要以下步骤：</p><p>保存现场、更新PCB、更新内存数据、转到调度程序，调用下一个进程、恢复现场</p><h2 id="模式切换" tabindex="-1">模式切换 <a class="header-anchor" href="#模式切换" aria-label="Permalink to &quot;模式切换&quot;">​</a></h2><p>模式切换指的是进程在用户态和内核态互转的过程，比如我的一个程序在执行的时候，需要调用文件读写，而文件读写是系统调用，必须在内核态中权力读写，在用户态中是禁止读写文件的，这就导致进程要从用户态转为内核态再有资格去完成相应的操作，模式切换不涉及到进程切换</p><h2 id="软中断" tabindex="-1">软中断 <a class="header-anchor" href="#软中断" aria-label="Permalink to &quot;软中断&quot;">​</a></h2><p>软中断也叫可屏蔽中断，也可以说是软件导致的中断。</p><h2 id="硬中断" tabindex="-1">硬中断 <a class="header-anchor" href="#硬中断" aria-label="Permalink to &quot;硬中断&quot;">​</a></h2><p>硬中断也叫不可屏蔽中断，如Int 就是属于不可屏蔽中断</p>',20),r=[o];function n(p,h,s,c,d,u){return t(),e("div",null,r)}const b=a(l,[["render",n]]);export{P as __pageData,b as default};
