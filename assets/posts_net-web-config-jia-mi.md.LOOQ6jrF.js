import{_ as o,c as t,o as e,a3 as i}from"./chunks/framework.Cv3JQ2Vj.js";const g=JSON.parse('{"title":".NET web.config 加密","description":"","frontmatter":{"title":".NET web.config 加密","date":"2018-06-13T00:00:00.000Z"},"headers":[],"relativePath":"posts/net-web-config-jia-mi.md","filePath":"posts/net-web-config-jia-mi.md"}'),n={name:"posts/net-web-config-jia-mi.md"},a=i('<h1 id="net-web-config-加密" tabindex="-1">.NET web.config 加密 <a class="header-anchor" href="#net-web-config-加密" aria-label="Permalink to &quot;.NET web.config 加密&quot;">​</a></h1><p>这篇文章就是为了 上一篇文章 写的 {#ZC_BLOG_HOST#}post/170.html 在web.config 文件中配置数据库连接信息虽然是方便，但是也有很大的安全隐患。</p><p>比如说，数据库连接字符串直接就以明文的方式暴露出来。这样别人直接就可以看到数据库的地址、账号、密码非常的危险！</p><p>所以为了安全起见，利用aspnet_regiis可以给web.config中的数据库连接字符串加密（当然也同样可以给web.config中的其他节点加密）</p><p>此加密算法采用一机一码，也就是说想要解密必须要在当初加密的那台计算机上，否正无法解密。</p><h1 id="加密方法如下" tabindex="-1">加密方法如下： <a class="header-anchor" href="#加密方法如下" aria-label="Permalink to &quot;加密方法如下：&quot;">​</a></h1><p>打开cmd</p><p>cd C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319</p><p>或者 cd C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727</p><p>或者直接 打开 Visual Studio 2012 工具命令提示 也是一样的</p><p>切换到了目录后 运行如下代码</p><p>aspnet_regiis -pef &quot;要加密的配置节点&quot; &quot;web.config所在目录的绝对路径&quot; -prov &quot;DataProtectionConfigurationProvider&quot;</p><p>demo：aspnet_regiis -pef &quot;connectionStrings&quot; &quot;D:\\web&quot; -prov &quot;DataProtectionConfigurationProvider&quot;</p><p>或</p><p>aspnet_regiis -pef &quot;要加密的配置节点&quot; &quot;web.config所在目录的绝对路径&quot;</p><p>demo：aspnet_regiis -pef &quot;connectionStrings&quot; &quot;D:\\web&quot;</p><p>两种加密方式不一样。推荐用第一个。</p><h1 id="解密方法如下" tabindex="-1">解密方法如下： <a class="header-anchor" href="#解密方法如下" aria-label="Permalink to &quot;解密方法如下：&quot;">​</a></h1><p>aspnet_regiis -pdf &quot;要解密的配置节点&quot; &quot;web.config所在目录的绝对路径&quot;</p><p>demo：aspnet_regiis -pdf &quot;connectionStrings&quot; &quot;D:\\web&quot;</p>',20),p=[a];function r(s,c,u,f,d,_){return e(),t("div",null,p)}const b=o(n,[["render",r]]);export{g as __pageData,b as default};
