import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.Cv3JQ2Vj.js";const c=JSON.parse('{"title":"ShardingSphere 分库分表配置","description":"","frontmatter":{"title":"ShardingSphere 分库分表配置","date":"2022-12-9"},"headers":[],"relativePath":"posts/sharding-sphere-fen-ku-fen-biao-pei-zhi.md","filePath":"posts/sharding-sphere-fen-ku-fen-biao-pei-zhi.md"}'),h={name:"posts/sharding-sphere-fen-ku-fen-biao-pei-zhi.md"},l=n(`<h1 id="shardingsphere-分库分表配置" tabindex="-1">ShardingSphere 分库分表配置 <a class="header-anchor" href="#shardingsphere-分库分表配置" aria-label="Permalink to &quot;ShardingSphere 分库分表配置&quot;">​</a></h1><p>SpringBoot 依赖：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.apache.shardingsphere&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;shardingsphere-jdbc-core-spring-boot-starter&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;5.2.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="通用配置" tabindex="-1">通用配置 <a class="header-anchor" href="#通用配置" aria-label="Permalink to &quot;通用配置&quot;">​</a></h2><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 模式配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.mode.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Memory</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数据源配置，多个数据源按 , 分割</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.names</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ds0, ds1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 数据源详情配置 spring.shardingsphere.datasource.&lt;数据源名称&gt;.xxx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### ds0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.zaxxer.hikari.HikariDataSource</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.jdbc-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=jdbc:mysql://localhost:3306/test?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">characterEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=utf8&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">zeroDateTimeBehavior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=convertToNull&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">useSSL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### ds1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.zaxxer.hikari.HikariDataSource</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.jdbc-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=jdbc:mysql://localhost:3306/test?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">characterEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=utf8&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">zeroDateTimeBehavior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=convertToNull&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">useSSL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span></code></pre></div><h2 id="分片策略" tabindex="-1">分片策略 <a class="header-anchor" href="#分片策略" aria-label="Permalink to &quot;分片策略&quot;">​</a></h2><p>分片策略是抽象出的概念，它是由分片算法和分片健组合而成，分片算法做具体的数据分片逻辑，分库、分表的分片策略配置是相对独立的，可以各自使用不同的策略与算法，每种策略中可以是多个分片算法的组合，每个分片算法可以对多个分片健做逻辑判断。</p><h2 id="以下配置根据实际需要选择性添加" tabindex="-1">以下配置根据实际需要选择性添加 <a class="header-anchor" href="#以下配置根据实际需要选择性添加" aria-label="Permalink to &quot;以下配置根据实际需要选择性添加&quot;">​</a></h2><h3 id="分库分表通用配置" tabindex="-1">分库分表通用配置 <a class="header-anchor" href="#分库分表通用配置" aria-label="Permalink to &quot;分库分表通用配置&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 标准分片表配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持 inline 表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实际的节点配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 即逻辑表对应哪些物理表 由数据源名 + 表名组成，以小数点分隔，有几个表就需要写几个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">actual-data-nodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 例子：比如 student 逻辑表对应 ds0 -&gt; student1 ds0 -&gt; student2 ds0 -&gt; student3，  ds1 -&gt; student1 ds1 -&gt; student2 ds1 -&gt; student3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.actual-data-nodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ds$-&gt;{0..1}.student_$-&gt;{1..3}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 例子：比如 teacher 逻辑表对应 ds0 -&gt; teacher1 ds0 -&gt; teacher2 ds0 -&gt; teacher3，  ds1 -&gt; teacher1 ds1 -&gt; teacher2 ds1 -&gt; teacher3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.teacher.actual-data-nodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ds$-&gt;{0..1}.teacher_$-&gt;{1..3}</span></span></code></pre></div><h3 id="分库配置" tabindex="-1">分库配置 <a class="header-anchor" href="#分库配置" aria-label="Permalink to &quot;分库配置&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于单分片键的标准分片场景（只按某一列分片）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">database-strategy.standard.sharding-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片列名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">database-strategy.standard.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片算法名称（算法名称在文档下方《分片算法配置》）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于多分片键的复合分片场景（按多个列分片）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">database-strategy.complex.sharding-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片列名称，多个列以逗号分隔</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">database-strategy.complex.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片算法名称（算法名称在文档下方《分片算法配置》）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于 Hint 的分片策略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">database-strategy.hint.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片算法名称（算法名称在文档下方《分片算法配置》）</span></span></code></pre></div><h3 id="分表配置-数据分片" tabindex="-1">分表配置（数据分片） <a class="header-anchor" href="#分表配置-数据分片" aria-label="Permalink to &quot;分表配置（数据分片）&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于单分片键的标准分片场景（只按某一列分片）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">table-strategy.standard.sharding-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片列名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">table-strategy.standard.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片算法名称（算法名称在文档下方《分片算法配置》）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于多分片键的复合分片场景（按多个列分片）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">table-strategy.complex.sharding-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片列名称，多个列以逗号分隔</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">table-strategy.complex.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片算法名称（算法名称在文档下方《分片算法配置》）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于 Hint 的分片策略 上边的算法中我们都是解析SQL 语句提取分片键，并设置分片策略进行分片。但有些时候我们并没有使用任何的分片键和分片策略，可还想将 SQL 路由到目标数据库和表，就需要通过手动干预指定SQL的目标数据库和表信息，这也叫强制路由</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">table-strategy.hint.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片算法名称（算法名称在文档下方《分片算法配置》）</span></span></code></pre></div><h3 id="绑定表-多个表关联查询时-确定物理表之间的绑定关系-不然容易出现笛卡尔积" tabindex="-1">绑定表(多个表关联查询时，确定物理表之间的绑定关系，不然容易出现笛卡尔积 ) <a class="header-anchor" href="#绑定表-多个表关联查询时-确定物理表之间的绑定关系-不然容易出现笛卡尔积" aria-label="Permalink to &quot;绑定表(多个表关联查询时，确定物理表之间的绑定关系，不然容易出现笛卡尔积 )&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#spring.shardingsphere.rules.sharding.binding-tables[0]= # 绑定表规则列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#spring.shardingsphere.rules.sharding.binding-tables[1]= # 绑定表规则列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#spring.shardingsphere.rules.sharding.binding-tables[x]= # 绑定表规则列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.binding-tables[0]=student,t_order</span></span></code></pre></div><h3 id="广播表-所做的所有操作将应用在所有库中对应的表-比如-0-库中的-user-表-1-库中的-user-表" tabindex="-1">广播表(所做的所有操作将应用在所有库中对应的表，比如 0 库中的 user 表，1 库中的 user 表) <a class="header-anchor" href="#广播表-所做的所有操作将应用在所有库中对应的表-比如-0-库中的-user-表-1-库中的-user-表" aria-label="Permalink to &quot;广播表(所做的所有操作将应用在所有库中对应的表，比如 0 库中的 user 表，1 库中的 user 表)&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#spring.shardingsphere.rules.sharding.broadcast-tables[0]= # 广播表规则列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#spring.shardingsphere.rules.sharding.broadcast-tables[1]= # 广播表规则列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#spring.shardingsphere.rules.sharding.broadcast-tables[x]= # 广播表规则列表</span></span></code></pre></div><h3 id="默认表和默认表-未按分片规则匹配到的-则走默认库和默认表" tabindex="-1">默认表和默认表（未按分片规则匹配到的，则走默认库和默认表） <a class="header-anchor" href="#默认表和默认表-未按分片规则匹配到的-则走默认库和默认表" aria-label="Permalink to &quot;默认表和默认表（未按分片规则匹配到的，则走默认库和默认表）&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># spring.shardingsphere.rules.sharding.default-database-strategy.xxx= # 默认数据库分片策略</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=user_id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.default-table-strategy.xxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认表分片策略同上</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.default-sharding-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认分片列名称</span></span></code></pre></div><h2 id="分布式序列策略配置-主键生成规则" tabindex="-1">分布式序列策略配置(主键生成规则) <a class="header-anchor" href="#分布式序列策略配置-主键生成规则" aria-label="Permalink to &quot;分布式序列策略配置(主键生成规则)&quot;">​</a></h2><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分布式序列策略配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 主键列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">key-generate-strategy.column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分布式序列列名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 主键生成算法，这里表示配置的是雪花算法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.key-generators.&lt;custom-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=SNOWFLAKE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.tables.&lt;table-name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">key-generate-strategy.key-generator-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分布式序列算法名称，也就是上方的&lt;custom-name&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 例子：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### 主键列，student 表的主键列为 id 列</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.key-generate-strategy.column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### 创建一个雪花算法的主键生成器为：table_auto_key</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.key-generators.table_auto_key.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=SNOWFLAKE</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### 将 student 表的主键生成策略绑定到 table_auto_key 上</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.key-generate-strategy.key-generator-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=table_auto_key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### 默认主键生成</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.default-key-generate-strategy.xxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">= </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认分布式序列策略</span></span></code></pre></div><h3 id="分片算法配置" tabindex="-1">分片算法配置 <a class="header-anchor" href="#分片算法配置" aria-label="Permalink to &quot;分片算法配置&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片算法配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;sharding-algorithm-name&gt;.type= # 分片算法类型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;sharding-algorithm-name&gt;.props.xxx= # 分片算法属性配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 例子</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 算法类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.student_table_split.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=INLINE</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 分片算法配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.student_table_split.props.algorithm-expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=student_$-&gt;{id % 2 + 1}</span></span></code></pre></div><h3 id="自定义分库分表算法" tabindex="-1">自定义分库分表算法 <a class="header-anchor" href="#自定义分库分表算法" aria-label="Permalink to &quot;自定义分库分表算法&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分库算法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;custom_name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=CLASS_BASED</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># （配置分片策略类型）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;custom_name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">props.strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=STANDARD</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># （配置分片策略类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;custom_name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">props.algorithmClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.shardingsphere.test.config.datasource.precise.PreciseShardingDatabaseAlgorithm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分表算法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;custom_name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=CLASS_BASED</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># （配置分片策略类型）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;custom_name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">props.strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=STANDARD</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义配置分片算法全限定名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spring.shardingsphere.rules.sharding.sharding-algorithms.&lt;custom_name&gt;.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">props.algorithmClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.shardingsphere.test.config.datasource.precise.PreciseShardingTableAlgorithm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## demo</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 分库算法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.database-precise-sharding.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=CLASS_BASED</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## （配置分片策略类型）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.database-precise-sharding.props.strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=STANDARD</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 自定义配置分片算法全限定名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.database-precise-sharding.props.algorithmClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.shardingsphere.test.config.datasource.precise.PreciseShardingDatabaseAlgorithm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 分表算法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.table-precise-sharding.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=CLASS_BASED</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## （配置分片策略类型）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.table-precise-sharding.props.strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=STANDARD</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 自定义配置分片算法全限定名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.table-precise-sharding.props.algorithmClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.shardingsphere.test.config.datasource.precise.PreciseShardingTableAlgorithm</span></span></code></pre></div><h3 id="打印-sql" tabindex="-1">打印 SQL ： <a class="header-anchor" href="#打印-sql" aria-label="Permalink to &quot;打印 SQL ：&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.props.sql-show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span></code></pre></div><h2 id="官方-demo-以及解释" tabindex="-1">官方 demo 以及解释 <a class="header-anchor" href="#官方-demo-以及解释" aria-label="Permalink to &quot;官方 demo 以及解释&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置数据源</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dataSources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## ds0 数据源</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ds_0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    dataSourceClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.zaxxer.hikari.HikariDataSource</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    driverClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.mysql.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    jdbcUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc:mysql://localhost:3306/demo_ds_0?serverTimezone=UTC&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## ds1 数据源</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ds_1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    dataSourceClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.zaxxer.hikari.HikariDataSource</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    driverClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.mysql.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    jdbcUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc:mysql://localhost:3306/demo_ds_1?serverTimezone=UTC&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分片规则</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!SHARDING</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ## 针对表 t_order 配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    t_order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      ## 实际的节点对应规则</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      actualDataNodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ds_\${0..1}.t_order_\${0..1}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      ## 表的分片策略</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      tableStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        standard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ### 根据什么字段进行分片</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          shardingColumn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">order_id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ### 分片的规则的算法名称是什么？名称在下方配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          shardingAlgorithmName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t-order-inline</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      ## 表的主键生成规则</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      keyGenerateStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        ### 什么字段是主键</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">order_id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        ### 主键生成的算法名称是什么？名称在下方配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        keyGeneratorName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">snowflake</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ## 针对表 t_order_item 配置，同上</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    t_order_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      actualDataNodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ds_\${0..1}.t_order_item_\${0..1}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      tableStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        standard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          shardingColumn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">order_id</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          shardingAlgorithmName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t_order-item-inline</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      keyGenerateStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">order_item_id</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        keyGeneratorName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">snowflake</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ## 针对表 t_account 配置，同上</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    t_account</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      actualDataNodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ds_\${0..1}.t_account_\${0..1}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      tableStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        standard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          shardingAlgorithmName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t-account-inline</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      keyGenerateStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">account_id</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        keyGeneratorName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">snowflake</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  defaultShardingColumn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">account_id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 绑定表</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  bindingTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t_order,t_order_item</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 广播表</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  broadcastTables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t_address</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 默认数据库策略，未匹配到的分片规则走默认的策略</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  defaultDatabaseStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    standard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      shardingColumn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">user_id</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      shardingAlgorithmName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">database-inline</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  defaultTableStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 相关算法配置，名称-表达式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  shardingAlgorithms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    database-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INLINE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      props</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        algorithm-expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ds_\${user_id % 2}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    t-order-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INLINE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      props</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        algorithm-expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t_order_\${order_id % 2}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    t_order-item-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INLINE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      props</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        algorithm-expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t_order_item_\${order_id % 2}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    t-account-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INLINE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      props</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        algorithm-expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">t_account_\${account_id % 2}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  keyGenerators</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    snowflake</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SNOWFLAKE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">props</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sql-show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置数据源</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.names</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ds0, ds1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## ds0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.zaxxer.hikari.HikariDataSource</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.jdbc-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=jdbc:mysql://localhost:3306/test?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">serverTimezone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=UTC&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">useSSL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">useUnicode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">characterEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=UTF-8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds0.password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## ds1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.zaxxer.hikari.HikariDataSource</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.jdbc-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=jdbc:mysql://localhost:3306/test?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">serverTimezone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=UTC&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">useSSL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">useUnicode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">characterEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=UTF-8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.datasource.ds1.password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 设置数据库分片规则</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.database-precise-sharding.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=CLASS_BASED</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.database-precise-sharding.props.strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=STANDARD</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.database-precise-sharding.props.algorithmClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=org.nobody.algorithm.CustomShardingDatabaseAlgorithm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 设置数据表分片规则</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.table-precise-sharding.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=CLASS_BASED</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.table-precise-sharding.props.strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=STANDARD</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.sharding-algorithms.table-precise-sharding.props.algorithmClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=org.nobody.algorithm.CustomShardingTableAlgorithm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## student 表实际分片节点配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.actual-data-nodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ds$-&gt;{0..1}.student_$-&gt;{1..2}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## student 分库配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.database-strategy.standard.sharding-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=id</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.database-strategy.standard.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=database-precise-sharding</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## student 分表配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.table-strategy.standard.sharding-column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=id</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.tables.student.table-strategy.standard.sharding-algorithm-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=table-precise-sharding</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 开启 SQL </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.props.sql-show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 设置主键生成规则</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.key-generators.my-key-generators.type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=SNOWFLAKE</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 设置默认主键生成的字段</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.default-key-generate-strategy.column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 设置默认主键生成规则名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">spring.shardingsphere.rules.sharding.default-key-generate-strategy.key-generator-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=my-key-generators</span></span></code></pre></div>`,31),e=[l];function p(t,k,r,d,g,E){return a(),i("div",null,e)}const o=s(h,[["render",p]]);export{c as __pageData,o as default};
