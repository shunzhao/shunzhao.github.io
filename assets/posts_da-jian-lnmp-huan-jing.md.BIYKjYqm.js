import{_ as p,c as a,o as n,a3 as e}from"./chunks/framework.Cv3JQ2Vj.js";const _=JSON.parse('{"title":"搭建LNMP环境","description":"","frontmatter":{"title":"搭建LNMP环境","date":"2017-12-21T00:00:00.000Z"},"headers":[],"relativePath":"posts/da-jian-lnmp-huan-jing.md","filePath":"posts/da-jian-lnmp-huan-jing.md"}'),t={name:"posts/da-jian-lnmp-huan-jing.md"},r=e('<h1 id="搭建lnmp环境" tabindex="-1">搭建LNMP环境 <a class="header-anchor" href="#搭建lnmp环境" aria-label="Permalink to &quot;搭建LNMP环境&quot;">​</a></h1><h2 id="搭建-nginx-静态服务器" tabindex="-1">搭建 Nginx 静态服务器 <a class="header-anchor" href="#搭建-nginx-静态服务器" aria-label="Permalink to &quot;搭建 Nginx 静态服务器&quot;">​</a></h2><p>使用 yum 安装 Nginx：</p><p>yum install nginx -y</p><p>修改 /etc/nginx/conf.d/default.conf，去除对 IPv6 地址的监听,可参考下面的代码示例 （这是因为CentOS 6 不支持 IPv6，需要取消对 IPv6 地址的监听，否则 Nginx 不能成功启动。）：</p><p>server {<br> listen 80 default_server;<br> # listen [::]:80 default_server;<br> server_name _;<br> root /usr/share/nginx/html; # Load configuration files for the default server block.<br> include /etc/nginx/default.d/*.conf; location / {<br> } error_page 404 /404.html;<br> location = /40x.html {<br> } error_page 500 502 503 504 /50x.html;<br> location = /50x.html {<br> } }</p><p>修改完成后，启动 Nginx：</p><p>nginx</p><p>此时，可访问ip地址来确认是否已经安装成功。</p><p>将 Nginx 设置为开机自动启动：</p><p>chkconfig nginx on</p><h2 id="安装-mysql-数据库服务" tabindex="-1">安装 MySQL 数据库服务 <a class="header-anchor" href="#安装-mysql-数据库服务" aria-label="Permalink to &quot;安装 MySQL 数据库服务&quot;">​</a></h2><p>使用 yum 安装 MySQL：</p><p>yum install mysql-server -y</p><p>安装完成后，启动 MySQL 服务：</p><p>service mysqld restart</p><p>设置 MySQL 账户 root 密码（下面命令中的密码是教程为您自动生成的，如果设置其它密码，请把密码记住。）：</p><p>/usr/bin/mysqladmin -u root password &#39;acSe3Mkm&#39;</p><p>将 MySQL 设置为开机自动启动：</p><p>chkconfig mysqld on</p><h2 id="搭建php环境" tabindex="-1">搭建PHP环境 <a class="header-anchor" href="#搭建php环境" aria-label="Permalink to &quot;搭建PHP环境&quot;">​</a></h2><p>使用 yum 安装 PHP：</p><p>yum install php php-fpm php-mysql -y</p><p>安装之后，启动 PHP-FPM 进程：</p><p>service php-fpm start</p><p>启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口 （PHP-FPM 默认监听 9000 端口）：</p><p>netstat -nlpt | grep php-fpm</p><p>把 PHP-FPM 也设置成开机自动启动：</p><p>chkconfig php-fpm on</p><h2 id="配置-nginx-并运行-php-程序" tabindex="-1">配置 Nginx 并运行 PHP 程序 <a class="header-anchor" href="#配置-nginx-并运行-php-程序" aria-label="Permalink to &quot;配置 Nginx 并运行 PHP 程序&quot;">​</a></h2><p>在 /etc/nginx/conf.d 目录中新建一个名为 php.conf 的文件，并配置 Nginx 端口 ，配置示例如下：</p><p>server { listen 8000; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 location ~ .php$ { root /usr/share/php; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; } }</p><p>修改配置完成后，重启 nginx 服务</p><p>service nginx restart</p><p>这时候，我们就可以在/usr/share/php 目录下新建一个 info.php 文件来检查 php 是否安装成功了。</p>',35),i=[r];function s(o,l,h,c,d,m){return n(),a("div",null,i)}const g=p(t,[["render",s]]);export{_ as __pageData,g as default};
