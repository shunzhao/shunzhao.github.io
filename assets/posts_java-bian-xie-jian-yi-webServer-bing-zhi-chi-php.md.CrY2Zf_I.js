import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.Cv3JQ2Vj.js";const F=JSON.parse('{"title":"Java编写简易WebServer并支持PHP","description":"","frontmatter":{"title":"Java编写简易WebServer并支持PHP","date":"2021-04-27T00:00:00.000Z"},"headers":[],"relativePath":"posts/java-bian-xie-jian-yi-webServer-bing-zhi-chi-php.md","filePath":"posts/java-bian-xie-jian-yi-webServer-bing-zhi-chi-php.md"}'),t={name:"posts/java-bian-xie-jian-yi-webServer-bing-zhi-chi-php.md"},h=n(`<h1 id="java编写简易webserver并支持php" tabindex="-1">Java编写简易WebServer并支持PHP <a class="header-anchor" href="#java编写简易webserver并支持php" aria-label="Permalink to &quot;Java编写简易WebServer并支持PHP&quot;">​</a></h1><p>先来讲解下思路。</p><h2 id="webserver工作模式" tabindex="-1">WebServer工作模式 <a class="header-anchor" href="#webserver工作模式" aria-label="Permalink to &quot;WebServer工作模式&quot;">​</a></h2><p>WebServer的工作流程大致是接受一个HTTP请求、处理请求、返回一个HTTP响应。</p><p>HTTP请求和响应的报文格式基本是固定的：</p><ol><li>请求行 响应行</li><li>请求头 响应头</li><li>请求体 响应体</li></ol><p>处理请求时，分两种情况：</p><ol><li>如果是静态的文件，可以直接读取文件的内容并返回。</li><li>如果是动态的文件，则调用相应的程序进行处理，获得其结果并返回。</li></ol><h2 id="java如何接受和响应http协议" tabindex="-1">Java如何接受和响应HTTP协议 <a class="header-anchor" href="#java如何接受和响应http协议" aria-label="Permalink to &quot;Java如何接受和响应HTTP协议&quot;">​</a></h2><p>HTTP协议基于TCP协议栈，因此可以很方便的利用Socket库实现，监听80端口，然后读客户端（比如浏览器）发送过来的请求并处理。</p><h2 id="多线程处理" tabindex="-1">多线程处理 <a class="header-anchor" href="#多线程处理" aria-label="Permalink to &quot;多线程处理&quot;">​</a></h2><p>因为要同时处理多个用户的请求，所以需要采用多线程运行，功能模块划分为等待连接模块和通信模块，等待连接模块用于等待客户端的连接，当连接到来时，新建一个线程（或从线程池中取一个线程）用于通信模块处理客户端的请求。</p><p>扩展知识：等待连接模块在WebServer启动后便一直存在，当连接到来时会复制自己（其本质就是个Socket），然后再将新的套接字交给通信模块处理。这里复制自己的原因在于，如果用当前的Socket处理连接请求，那么在这期间新来的请求就无法被处理，而采用复制自身的方式，这样始终有一个等待连接的Socket可以处理新来的请求。</p><h2 id="java与php程序的通信" tabindex="-1">Java与PHP程序的通信 <a class="header-anchor" href="#java与php程序的通信" aria-label="Permalink to &quot;Java与PHP程序的通信&quot;">​</a></h2><p>这里我采用最简单同时也被淘汰的方法——利用CGI与PHP通信。</p><p>简单介绍下CGI，CGI也叫通用网关接口，这个接口和面向对象语言中的接口含义一样，用于制定Web Serve和其他程序进行通信的协议，可以说是<strong>动态网页的开国元勋，但目前几乎被淘汰了</strong>，其一大特点是，只要支持<strong>标准输入、标准输出、标准错误</strong>的计算机语言，都可以实现该接口，并且外部也利用<strong>标准输入、标准输出、标准错误</strong>与CGI程序通信。</p><p>具体的通信方式为：Web Server读取HTTP信息，然后利用<strong>标准输出</strong>设置<strong>相应的环境变量的值</strong>，然后CGI程序通过<strong>标准输入</strong>读取<strong>相应环境变量的值</strong>，获取到参数，执行相应的操作。</p><p>PHP最初就实现了该接口，可以在PHP安装目录下看到一个程序名为php-cgi.exe，这意味着我们只需要利用Java调用该程序，并设置相应的环境变量的值就可以了。</p><p>具体环境变量列表请看<a href="https://baike.baidu.com/item/CGI/607810?fr=aladdin#5" target="_blank" rel="noreferrer">https://baike.baidu.com/item/CGI/607810?fr=aladdin#5</a></p><h2 id="java调用php程序处理get请求" tabindex="-1">Java调用PHP程序处理GET请求： <a class="header-anchor" href="#java调用php程序处理get请求" aria-label="Permalink to &quot;Java调用PHP程序处理GET请求：&quot;">​</a></h2><p>处理GET请求时，必须传递的环境变量有：</p><ol><li>SCRIPT_FILENAME PHP文件所在的全路径名，比如SCRIPT_FILENAME=D:/zhaoshun/index.php</li><li>REQUEST_METHOD 请求的方法，比如REQUEST_METHOD=GET</li><li>QUERY_STRING GET方法传递的参数</li></ol><p>具体的例子：</p><p>PHP：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ZhaoShun</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">h1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_GET[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">h1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Java：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cgiGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String fileName, String params){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //String fileName = &quot;D:\\\\xampp\\\\php\\\\index.php&quot;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String method </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //String params = &quot;name=this is shunzi&#39;s blog&quot;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Process exec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">php-cgi.exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                 new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SCRIPT_FILENAME=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileName,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                              &quot;REQUEST_METHOD=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                              &quot;QUERY_STRING=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                             });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        BufferedReader bufferedReader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( (line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bufferedReader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(line);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (IOException </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>打印到控制台的结果： <img src="https://static.naidie.com/2021/04/27/Snipaste_2021-04-27_18-31-20.png" alt="Snipaste_2021-04-27_18-31-20.png"></p><h2 id="java调用php程序处理post请求" tabindex="-1">Java调用PHP程序处理POST请求： <a class="header-anchor" href="#java调用php程序处理post请求" aria-label="Permalink to &quot;Java调用PHP程序处理POST请求：&quot;">​</a></h2><p>处理GET请求时，必须传递的环境变量有：</p><ol><li>SCRIPT_FILENAME PHP文件所在的全路径名，比如SCRIPT_FILENAME=D:/zhaoshun/index.php</li><li>REQUEST_METHOD 请求的方法，比如REQUEST_METHOD=POST</li><li>CONTENT_TYPE 参数的类型，比如提交表单时，CONTENT_TYPE=application/x-www-form-urlencoded</li><li>CONTENT_LENGTH 参数的长度，指程序读取多少个字节的参数为止，通常可以从HTTP请求头中获取到该信息。</li></ol><p>与GET方式不一样的是，在传递参数时，不是用QUERY_STRING环境变量，而是需要用标准输出流进行传递，因此这里用了OutputStream。</p><p>具体的例子：</p><p>PHP：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">shunzi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">head</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">h1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_POST[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">h1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Java：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cgiPost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String fileName, String params, String contentType, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> contentLen){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //String fileName = &quot;D:\\\\xampp\\\\php\\\\index.php&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //String method = &quot;POST&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //String params = &quot;name=php is the best language in the world&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //String contentType = &quot;application/x-www-form-urlencoded&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //int contentLen = params.length();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Process exec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Runtime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">php-cgi.exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                 new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SCRIPT_FILENAME=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileName,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                              &quot;CONTENT_TYPE=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">contentType,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                              &quot;CONTENT_LENGTH=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">contentLen,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                              &quot;REQUEST_METHOD=POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                             });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        OutputStream outputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        outputStream.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(StandardCharsets.UTF_8));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        outputStream.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        outputStream.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        BufferedReader bufferedReader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( (line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bufferedReader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(line);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (IOException </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>打印到控制台的结果：</p><p><img src="https://static.naidie.com/2021/04/27/Snipaste_2021-04-27_18-40-55.png" alt="Snipaste_2021-04-27_18-40-55.png"></p><h3 id="性能的改进" tabindex="-1">性能的改进： <a class="header-anchor" href="#性能的改进" aria-label="Permalink to &quot;性能的改进：&quot;">​</a></h3><p>CGI的缺点在于其工作模式为fork-and-execute，即每一个请求都要启动一个CGI进程，然后执行程序，最后销毁，学习过操作系统的都知道，创建和销毁进程的消耗很大，因此导致PHP性能不好，后来PHP改进的使用FastCGI，同理这个简单的WebServe可以优化。</p><h4 id="fastcgi是什么" tabindex="-1">FastCGI是什么？ <a class="header-anchor" href="#fastcgi是什么" aria-label="Permalink to &quot;FastCGI是什么？&quot;">​</a></h4><p>FastCGI可以理解为CGI的升级版，通过创建进程池的方式解决了传统CGI程序的缺点，同时继承了CGI程序的优点——语言无关系，其通信方式也不再是用环境变量，而是通过Socket传递，具体的协议可以参考这两篇文章：</p><p>[]: <a href="https://blog.csdn.net/zhang197093/article/details/78914509" target="_blank" rel="noreferrer">https://blog.csdn.net/zhang197093/article/details/78914509</a> &quot;FastCGI协议详解及代码实现&quot;</p><p><a href="https://segmentfault.com/a/1190000013112052" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000013112052</a></p>`,45),p=[h];function l(k,e,r,E,d,g){return a(),i("div",null,p)}const o=s(t,[["render",l]]);export{F as __pageData,o as default};
